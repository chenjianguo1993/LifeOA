<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!--分散配置 初始化配置文件 Spring特殊的bean-->
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:config/init.properties</value>
		</property>
	</bean>

	<!-- apache dbcp连接池配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="testWhileIdle" value="true" /> <!-- 打开检查,用异步线程evict进行检查 -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select * from dual" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="numTestsPerEvictionRun" value="20" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />



	</bean>

	<!-- 数据源配置 <bean id="DataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName"><value>${datasource.driverClassName}</value></property> 
		<property name="url"><value>${datasource.url}</value></property> <property 
		name="username"><value>${datasource.username}</value></property> <property 
		name="password"><value>${datasource.password}</value></property> </bean> -->
	<!-- session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 原来的 org.hibernate.dialect.Oracle10gDialectForOJDBC6-->
		<!-- 更改之后的Oracle10gDialect -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hibernate.default_schema">customs</prop> -->
			</props>
		</property>
		<!-- hibernate配置文件路径 -->
		<property name="configLocation">
			<value>classpath:config/hibernate.cfg.xml</value>
		</property>

		<!-- 自动扫描 <property name="packagesToScan" value="com.common.model.Menu" 
			/> -->
	</bean>
	<!-- hibernate模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 配置事务的传播特性 -->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	<!-- 使用annotation 自动注册bean(@Respository,@Component),并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.oa,org.oa" />

	<!-- 使Spring关注Annotation (激活注解) -->
	<context:annotation-config />

	<!-- 那些类的哪些方法参与事务 -->
	<aop:config>
		<aop:pointcut id="allCommonServiceMethod" expression="execution(* com.oa.*.sys.*.*.*(..))" />
		<!-- 以下allProjectServiceMethod为增加的功能包也坐事务处理 -->
		<aop:pointcut id="allGaServiceMethod" expression="execution(* org.oa.*.sys.*.*.*(..))" />

		<aop:advisor pointcut-ref="allCommonServiceMethod"
			advice-ref="txAdvice" />
		<aop:advisor pointcut-ref="allGaServiceMethod" advice-ref="txAdvice" />

	</aop:config>

	<aop:aspectj-autoproxy />

	<!-- 定时器 <import resource="springQuartz.xml"/> -->
</beans>